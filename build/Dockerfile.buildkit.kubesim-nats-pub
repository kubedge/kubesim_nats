# Build the manager binary
FROM golang:1.23 AS builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY kubesim_nats_pub/ kubesim_nats_pub/

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o kubesim-nats-pub kubesim_nats_pub/main.go

# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM scratch
WORKDIR /
ADD build/etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /workspace/kubesim-nats-pub /usr/local/bin/kubesim-nats-pub
# USER 65532:65532
CMD ["/usr/local/bin/kubesim-nats-pub", "-s", "nats://my-user:T0pS3cr3t@nats-cluster.nats-io.svc.cluster.local:4222", "dockerfile-hardcoded-subject", "dockerfile-hardcoded-message"]